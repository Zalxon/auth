{"version":3,"file":"index.cjs","sources":["../src/storage.js","../src/session.js","../src/auth.js","../src/login.js","../src/api.js"],"sourcesContent":["const TOKEN_KEY = 'zalxon-auth-token'\n\nexport const storage = {\n  get: () => {\n    try {\n      return window.localStorage.getItem(TOKEN_KEY)\n    } catch (err) {\n      if (err.message !== 'window is not defined')\n        console.warn(\n          'localStorage is disabled so cannot be used to persist token',\n          err\n        )\n    }\n  },\n  set: (value) => {\n    try {\n      window.localStorage.setItem(TOKEN_KEY, value)\n    } catch (err) {\n      if (err.message !== 'window is not defined')\n        console.warn(\n          'localStorage is disabled so cannot be used to persist token',\n          err\n        )\n    }\n  },\n  remove: () => {\n    try {\n      window.localStorage.removeItem(TOKEN_KEY)\n    } catch (err) {\n      if (err.message !== 'window is not defined')\n        console.warn(\n          'localStorage is disabled so cannot be used to persist token',\n          err\n        )\n    }\n  },\n}\n","import React, { useState, createContext, useContext } from 'react'\nimport { storage } from './storage'\n\nconst Session = createContext(null)\n\nexport const useSession = () => {\n  return useContext(Session)\n}\n\nexport const SessionProvider = ({\n  children,\n  config = { useLocalStorage: false },\n}) => {\n  const [session, setSession] = useState({\n    token: null,\n    username: null,\n    config: config,\n  })\n\n  if (config.useLocalStorage === false) {\n    storage.remove()\n  }\n\n  return (\n    <Session.Provider value={[session, setSession]}>\n      {children}\n    </Session.Provider>\n  )\n}\n","import useSWR from 'swr'\nimport React, { useState, useEffect, createContext, useContext } from 'react'\nimport { useRouter } from 'next/router.js'\nimport { Layout } from '@zalxon/components'\nimport { useSession } from './session'\nimport { storage } from './storage'\n\nexport function useAuth() {\n  const router = useRouter()\n  const [{ token, config }] = useSession()\n\n  let auth\n  if (config.useLocalStorage) {\n    auth = token || storage.get()\n  } else {\n    auth = token\n  }\n\n  const fetcher = (url, token) =>\n    fetch(url, { headers: { Authorization: auth } }).then((r) => r.json())\n\n  const { data, error } = useSWR(['/api/auth', auth], fetcher)\n  const loading = !data && !error\n  const authed = data && data.authed\n  const username = data && data.authed ? data.username : null\n\n  return { data, error, loading, authed, username }\n}\n\nexport const withAuth =\n  (Component, usernames = ['admin']) =>\n  (props) => {\n    const router = useRouter()\n    const [{ config }] = useSession()\n    const { data, error, loading } = useAuth()\n\n    useEffect(() => {\n      if ((data && !data.authed) || error) {\n        if (config.useLocalStorage) storage.remove()\n        window.location.assign(\n          `/login?redirect=${encodeURIComponent(router.asPath)}`\n        )\n      }\n    }, [data])\n\n    if (data && data.username) {\n      if (!usernames.includes(data.username)) {\n        data.authed = false\n        return (\n          <Layout\n            title='Zalxon – Login'\n            description='Login page for authenticated resource'\n            status={'restricted'}\n          ></Layout>\n        )\n      }\n    }\n\n    if (data && data.authed) {\n      return <Component {...props} />\n    } else {\n      return (\n        <Layout\n          title='Zalxon – Login'\n          description='Login page for authenticated resource'\n          footer={false}\n          status={'authenticating'}\n        ></Layout>\n      )\n    }\n  }\n","import React, { useState, useEffect } from 'react'\nimport { Box, Text, Heading, Input, Button } from 'theme-ui'\nimport { useRouter } from 'next/router.js'\nimport { Layout, Row, Column } from '@zalxon/components'\nimport { useSession } from './session'\nimport { storage } from './storage'\n\nconst Login = ({ origin }) => {\n  const router = useRouter()\n  const [{ config }, setSession] = useSession()\n  const [status, setStatus] = useState(null)\n  const [password, setPassword] = useState('')\n\n  const { redirect } = router.query\n\n  const disabled = ['authenticating', 'submitting'].includes(status)\n\n  useEffect(() => {\n    if (config.useLocalStorage) {\n      const auth = storage.get()\n      if (auth && redirect) {\n        router.push(redirect)\n      }\n    }\n  }, [redirect, config.useLocalStorage])\n\n  async function submit(e) {\n    setStatus('submitting')\n    e.preventDefault()\n    const res = await fetch('/api/auth', {\n      method: 'POST',\n      body: JSON.stringify({ password: password }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    if (res.status !== 200) {\n      setStatus('invalid')\n      setTimeout(() => {\n        setStatus(null)\n      }, 1000)\n    } else {\n      const { username, token } = await res.json()\n      setSession({ token: token, username: username, config: config })\n      if (config.useLocalStorage) storage.set(token)\n      setStatus('authenticating')\n      if (redirect) {\n        router.push(redirect)\n      } else {\n        router.push('/')\n      }\n    }\n  }\n\n  return (\n    <Layout\n      status={status}\n      footer={false}\n      title='Zalxon – Login'\n      description='Login page for authenticated resource'\n    >\n      <Row sx={{ mt: [5] }}>\n        <Column start={[1, 2]} width={[6, 6]}>\n          <Heading sx={{ my: [4, 5, 5], fontSize: [6, 7, 7] }}>\n            This page is private\n          </Heading>\n          <Text sx={{ my: [3, 4, 4], fontSize: [4, 5, 5] }}>\n            Enter a password to continue\n          </Text>\n          <Box as='form' onSubmit={submit} sx={{ fontSize: [4], mb: [4] }}>\n            <Input\n              sx={{\n                width: ['200px'],\n                mt: [2],\n                borderStyle: 'solid',\n                borderWidth: '0px',\n                borderBottomWidth: '1px',\n                borderColor: 'secondary',\n                borderRadius: '0px',\n                transition: '0.15s',\n                ':focus-visible': {\n                  outline: 'none !important',\n                  background: 'none !important',\n                  borderColor: 'primary',\n                },\n              }}\n              type='password'\n              name='password'\n              id='password'\n              value={password}\n              placeholder='Password?'\n              autoFocus={true}\n              onChange={(e) => {\n                setPassword(e.target.value)\n              }}\n            />\n            <Button\n              disabled={disabled}\n              onClick={submit}\n              type='submit'\n              sx={{\n                fontFamily: 'faux',\n                color: 'text',\n                display: 'inline-block',\n                mr: [3],\n                fontSize: [7],\n                mt: [2],\n                cursor: 'pointer',\n                '&:hover': {\n                  color: disabled ? 'primary' : 'secondary',\n                },\n                background: 'none',\n                p: [0],\n              }}\n            >\n              →\n            </Button>\n          </Box>\n        </Column>\n      </Row>\n    </Layout>\n  )\n}\n\nexport default Login\n","import jwt from 'jsonwebtoken'\nimport safeCompare from 'safe-compare'\n\nconst api = ({ secret, users, expiration = '1h' }) => {\n  const handler = (req, res) => {\n    if (req.method === 'POST') {\n      const user = users.find((d) => safeCompare(d.password, req.body.password))\n      if (user) {\n        const token = jwt.sign({ username: user.username }, secret, {\n          expiresIn: expiration,\n        })\n        res.status(200).json({ username: user.username, token: token })\n      } else {\n        res.status(403).json({ message: 'password not recognized' })\n      }\n    }\n\n    if (req.method === 'GET') {\n      if (process.env.AUTH_OVERRIDE) {\n        res.status(200).json({ username: 'admin', authed: true })\n      } else {\n        const token = req.headers.authorization\n        try {\n          var decoded = jwt.verify(token, secret)\n          res.status(200).json({ username: decoded.username, authed: true })\n        } catch (err) {\n          res.status(403).json({ authed: false })\n        }\n      }\n    }\n  }\n\n  return handler\n}\n\nexport default api\n"],"names":["storage","window","localStorage","getItem","err","message","console","warn","removeItem","Session","createContext","useSession","useContext","useRouter","auth","token","_useSession$","config","useLocalStorage","useSWR","url","fetch","headers","Authorization","then","r","json","data","_useSWR","error","loading","authed","username","_ref","children","_ref$config","useState","session","_useState","setSession","React","createElement","Provider","value","submit","e","setStatus","preventDefault","method","body","JSON","stringify","password","res","_temp","status","Promise","resolve","_ref2","setItem","router","push","redirect","setTimeout","reject","setPassword","_useState2","query","disabled","includes","useEffect","Layout","footer","title","description","Row","sx","mt","Column","start","width","Heading","my","fontSize","Text","Box","as","onSubmit","mb","Input","borderStyle","borderWidth","borderBottomWidth","borderColor","borderRadius","transition","outline","background","type","name","id","placeholder","autoFocus","onChange","target","Button","onClick","fontFamily","color","display","mr","cursor","p","secret","users","_ref$expiration","expiration","req","user","find","d","safeCompare","jwt","sign","expiresIn","process","env","AUTH_OVERRIDE","_token","authorization","decoded","verify","Component","usernames","props","useAuth","location","assign","encodeURIComponent","asPath"],"mappings":"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"}